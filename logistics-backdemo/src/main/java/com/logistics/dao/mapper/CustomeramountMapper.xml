<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.dao.mapper.CustomeramountMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Customeramount" >
    <id column="send_goods_customer" property="sendGoodsCustomer" jdbcType="VARCHAR" />
    <result column="carriage_total" property="carriageTotal" jdbcType="DOUBLE" />
    <result column="insurance_total" property="insuranceTotal" jdbcType="DOUBLE" />
    <result column="piece_amount_total" property="pieceAmountTotal" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    send_goods_customer, carriage_total, insurance_total, piece_amount_total
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.CustomeramountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customeramount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from customeramount
    where send_goods_customer = #{sendGoodsCustomer,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from customeramount
    where send_goods_customer = #{sendGoodsCustomer,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.CustomeramountExample" >
    delete from customeramount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Customeramount" >
    insert into customeramount (send_goods_customer, carriage_total, 
      insurance_total, piece_amount_total)
    values (#{sendGoodsCustomer,jdbcType=VARCHAR}, #{carriageTotal,jdbcType=DOUBLE}, 
      #{insuranceTotal,jdbcType=DOUBLE}, #{pieceAmountTotal,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Customeramount" >
    insert into customeramount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sendGoodsCustomer != null" >
        send_goods_customer,
      </if>
      <if test="carriageTotal != null" >
        carriage_total,
      </if>
      <if test="insuranceTotal != null" >
        insurance_total,
      </if>
      <if test="pieceAmountTotal != null" >
        piece_amount_total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sendGoodsCustomer != null" >
        #{sendGoodsCustomer,jdbcType=VARCHAR},
      </if>
      <if test="carriageTotal != null" >
        #{carriageTotal,jdbcType=DOUBLE},
      </if>
      <if test="insuranceTotal != null" >
        #{insuranceTotal,jdbcType=DOUBLE},
      </if>
      <if test="pieceAmountTotal != null" >
        #{pieceAmountTotal,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.CustomeramountExample" resultType="java.lang.Integer" >
    select count(*) from customeramount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customeramount
    <set >
      <if test="record.sendGoodsCustomer != null" >
        send_goods_customer = #{record.sendGoodsCustomer,jdbcType=VARCHAR},
      </if>
      <if test="record.carriageTotal != null" >
        carriage_total = #{record.carriageTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.insuranceTotal != null" >
        insurance_total = #{record.insuranceTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.pieceAmountTotal != null" >
        piece_amount_total = #{record.pieceAmountTotal,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customeramount
    set send_goods_customer = #{record.sendGoodsCustomer,jdbcType=VARCHAR},
      carriage_total = #{record.carriageTotal,jdbcType=DOUBLE},
      insurance_total = #{record.insuranceTotal,jdbcType=DOUBLE},
      piece_amount_total = #{record.pieceAmountTotal,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Customeramount" >
    update customeramount
    <set >
      <if test="carriageTotal != null" >
        carriage_total = #{carriageTotal,jdbcType=DOUBLE},
      </if>
      <if test="insuranceTotal != null" >
        insurance_total = #{insuranceTotal,jdbcType=DOUBLE},
      </if>
      <if test="pieceAmountTotal != null" >
        piece_amount_total = #{pieceAmountTotal,jdbcType=INTEGER},
      </if>
    </set>
    where send_goods_customer = #{sendGoodsCustomer,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Customeramount" >
    update customeramount
    set carriage_total = #{carriageTotal,jdbcType=DOUBLE},
      insurance_total = #{insuranceTotal,jdbcType=DOUBLE},
      piece_amount_total = #{pieceAmountTotal,jdbcType=INTEGER}
    where send_goods_customer = #{sendGoodsCustomer,jdbcType=VARCHAR}
  </update>
</mapper>