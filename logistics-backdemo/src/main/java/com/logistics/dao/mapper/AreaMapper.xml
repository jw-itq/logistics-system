<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.dao.mapper.AreaMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Area" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="area_name" property="areaName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="shortname" property="shortname" jdbcType="VARCHAR" />
    <result column="zipcode" property="zipcode" jdbcType="INTEGER" />
    <result column="pinyin" property="pinyin" jdbcType="VARCHAR" />
    <result column="lng" property="lng" jdbcType="VARCHAR" />
    <result column="lat" property="lat" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="BIT" />
    <result column="sort" property="sort" jdbcType="TINYINT" />
    <result column="is_reg" property="isReg" jdbcType="TINYINT" />
    <result column="is_open" property="isOpen" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, area_name, parent_id, shortname, zipcode, pinyin, lng, lat, level, sort, is_reg, 
    is_open
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.AreaExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.AreaExample" >
    delete from area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Area" >
    insert into area (id, area_name, parent_id, 
      shortname, zipcode, pinyin, 
      lng, lat, level, sort, 
      is_reg, is_open)
    values (#{id,jdbcType=INTEGER}, #{areaName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{shortname,jdbcType=VARCHAR}, #{zipcode,jdbcType=INTEGER}, #{pinyin,jdbcType=VARCHAR}, 
      #{lng,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{level,jdbcType=BIT}, #{sort,jdbcType=TINYINT}, 
      #{isReg,jdbcType=TINYINT}, #{isOpen,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Area" >
    insert into area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="areaName != null" >
        area_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="shortname != null" >
        shortname,
      </if>
      <if test="zipcode != null" >
        zipcode,
      </if>
      <if test="pinyin != null" >
        pinyin,
      </if>
      <if test="lng != null" >
        lng,
      </if>
      <if test="lat != null" >
        lat,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isReg != null" >
        is_reg,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="areaName != null" >
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="shortname != null" >
        #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=INTEGER},
      </if>
      <if test="pinyin != null" >
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=BIT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=TINYINT},
      </if>
      <if test="isReg != null" >
        #{isReg,jdbcType=TINYINT},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.AreaExample" resultType="java.lang.Integer" >
    select count(*) from area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update area
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.areaName != null" >
        area_name = #{record.areaName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.shortname != null" >
        shortname = #{record.shortname,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null" >
        zipcode = #{record.zipcode,jdbcType=INTEGER},
      </if>
      <if test="record.pinyin != null" >
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null" >
        lng = #{record.lng,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null" >
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=BIT},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=TINYINT},
      </if>
      <if test="record.isReg != null" >
        is_reg = #{record.isReg,jdbcType=TINYINT},
      </if>
      <if test="record.isOpen != null" >
        is_open = #{record.isOpen,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update area
    set id = #{record.id,jdbcType=INTEGER},
      area_name = #{record.areaName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      shortname = #{record.shortname,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=INTEGER},
      pinyin = #{record.pinyin,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=BIT},
      sort = #{record.sort,jdbcType=TINYINT},
      is_reg = #{record.isReg,jdbcType=TINYINT},
      is_open = #{record.isOpen,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Area" >
    update area
    <set >
      <if test="areaName != null" >
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="shortname != null" >
        shortname = #{shortname,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        zipcode = #{zipcode,jdbcType=INTEGER},
      </if>
      <if test="pinyin != null" >
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="lng != null" >
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null" >
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=BIT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=TINYINT},
      </if>
      <if test="isReg != null" >
        is_reg = #{isReg,jdbcType=TINYINT},
      </if>
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Area" >
    update area
    set area_name = #{areaName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      shortname = #{shortname,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=INTEGER},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      level = #{level,jdbcType=BIT},
      sort = #{sort,jdbcType=TINYINT},
      is_reg = #{isReg,jdbcType=TINYINT},
      is_open = #{isOpen,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>