<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.dao.mapper.RouteinfoMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Routeinfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="distance" property="distance" jdbcType="DOUBLE" />
    <result column="end_station" property="endStation" jdbcType="INTEGER" />
    <result column="fetch_time" property="fetchTime" jdbcType="DOUBLE" />
    <result column="pass_station" property="passStation" jdbcType="VARCHAR" />
    <result column="start_station" property="startStation" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, distance, end_station, fetch_time, pass_station, start_station
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.RouteinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from routeinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from routeinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from routeinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.RouteinfoExample" >
    delete from routeinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Routeinfo" >
    insert into routeinfo (id, distance, end_station, 
      fetch_time, pass_station, start_station
      )
    values (#{id,jdbcType=INTEGER}, #{distance,jdbcType=DOUBLE}, #{endStation,jdbcType=INTEGER}, 
      #{fetchTime,jdbcType=DOUBLE}, #{passStation,jdbcType=VARCHAR}, #{startStation,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Routeinfo" >
    insert into routeinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="distance != null" >
        distance,
      </if>
      <if test="endStation != null" >
        end_station,
      </if>
      <if test="fetchTime != null" >
        fetch_time,
      </if>
      <if test="passStation != null" >
        pass_station,
      </if>
      <if test="startStation != null" >
        start_station,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        #{distance,jdbcType=DOUBLE},
      </if>
      <if test="endStation != null" >
        #{endStation,jdbcType=INTEGER},
      </if>
      <if test="fetchTime != null" >
        #{fetchTime,jdbcType=DOUBLE},
      </if>
      <if test="passStation != null" >
        #{passStation,jdbcType=VARCHAR},
      </if>
      <if test="startStation != null" >
        #{startStation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.RouteinfoExample" resultType="java.lang.Integer" >
    select count(*) from routeinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update routeinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.distance != null" >
        distance = #{record.distance,jdbcType=DOUBLE},
      </if>
      <if test="record.endStation != null" >
        end_station = #{record.endStation,jdbcType=INTEGER},
      </if>
      <if test="record.fetchTime != null" >
        fetch_time = #{record.fetchTime,jdbcType=DOUBLE},
      </if>
      <if test="record.passStation != null" >
        pass_station = #{record.passStation,jdbcType=VARCHAR},
      </if>
      <if test="record.startStation != null" >
        start_station = #{record.startStation,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update routeinfo
    set id = #{record.id,jdbcType=INTEGER},
      distance = #{record.distance,jdbcType=DOUBLE},
      end_station = #{record.endStation,jdbcType=INTEGER},
      fetch_time = #{record.fetchTime,jdbcType=DOUBLE},
      pass_station = #{record.passStation,jdbcType=VARCHAR},
      start_station = #{record.startStation,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Routeinfo" >
    update routeinfo
    <set >
      <if test="distance != null" >
        distance = #{distance,jdbcType=DOUBLE},
      </if>
      <if test="endStation != null" >
        end_station = #{endStation,jdbcType=INTEGER},
      </if>
      <if test="fetchTime != null" >
        fetch_time = #{fetchTime,jdbcType=DOUBLE},
      </if>
      <if test="passStation != null" >
        pass_station = #{passStation,jdbcType=VARCHAR},
      </if>
      <if test="startStation != null" >
        start_station = #{startStation,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Routeinfo" >
    update routeinfo
    set distance = #{distance,jdbcType=DOUBLE},
      end_station = #{endStation,jdbcType=INTEGER},
      fetch_time = #{fetchTime,jdbcType=DOUBLE},
      pass_station = #{passStation,jdbcType=VARCHAR},
      start_station = #{startStation,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>