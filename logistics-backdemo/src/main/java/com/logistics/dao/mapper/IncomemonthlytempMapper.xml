<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.dao.mapper.IncomemonthlytempMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Incomemonthlytemp" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="biz_fee" property="bizFee" jdbcType="DOUBLE" />
    <result column="biz_income" property="bizIncome" jdbcType="DOUBLE" />
    <result column="car_carriage" property="carCarriage" jdbcType="DOUBLE" />
    <result column="carriage_money" property="carriageMoney" jdbcType="DOUBLE" />
    <result column="convey_wage" property="conveyWage" jdbcType="DOUBLE" />
    <result column="finance_fee" property="financeFee" jdbcType="DOUBLE" />
    <result column="house_rent" property="houseRent" jdbcType="DOUBLE" />
    <result column="income" property="income" jdbcType="DOUBLE" />
    <result column="insurance_money" property="insuranceMoney" jdbcType="DOUBLE" />
    <result column="manage_fee" property="manageFee" jdbcType="DOUBLE" />
    <result column="month" property="month" jdbcType="VARCHAR" />
    <result column="office_fee" property="officeFee" jdbcType="DOUBLE" />
    <result column="other" property="other" jdbcType="DOUBLE" />
    <result column="payout" property="payout" jdbcType="DOUBLE" />
    <result column="phone_fee" property="phoneFee" jdbcType="DOUBLE" />
    <result column="profit" property="profit" jdbcType="DOUBLE" />
    <result column="unbiz_income" property="unbizIncome" jdbcType="DOUBLE" />
    <result column="wage" property="wage" jdbcType="DOUBLE" />
    <result column="water_elec_fee" property="waterElecFee" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, biz_fee, biz_income, car_carriage, carriage_money, convey_wage, finance_fee, 
    house_rent, income, insurance_money, manage_fee, month, office_fee, other, payout, 
    phone_fee, profit, unbiz_income, wage, water_elec_fee
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.IncomemonthlytempExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from incomemonthlytemp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from incomemonthlytemp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from incomemonthlytemp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.IncomemonthlytempExample" >
    delete from incomemonthlytemp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Incomemonthlytemp" >
    insert into incomemonthlytemp (id, biz_fee, biz_income, 
      car_carriage, carriage_money, convey_wage, 
      finance_fee, house_rent, income, 
      insurance_money, manage_fee, month, 
      office_fee, other, payout, 
      phone_fee, profit, unbiz_income, 
      wage, water_elec_fee)
    values (#{id,jdbcType=INTEGER}, #{bizFee,jdbcType=DOUBLE}, #{bizIncome,jdbcType=DOUBLE}, 
      #{carCarriage,jdbcType=DOUBLE}, #{carriageMoney,jdbcType=DOUBLE}, #{conveyWage,jdbcType=DOUBLE}, 
      #{financeFee,jdbcType=DOUBLE}, #{houseRent,jdbcType=DOUBLE}, #{income,jdbcType=DOUBLE}, 
      #{insuranceMoney,jdbcType=DOUBLE}, #{manageFee,jdbcType=DOUBLE}, #{month,jdbcType=VARCHAR}, 
      #{officeFee,jdbcType=DOUBLE}, #{other,jdbcType=DOUBLE}, #{payout,jdbcType=DOUBLE}, 
      #{phoneFee,jdbcType=DOUBLE}, #{profit,jdbcType=DOUBLE}, #{unbizIncome,jdbcType=DOUBLE}, 
      #{wage,jdbcType=DOUBLE}, #{waterElecFee,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Incomemonthlytemp" >
    insert into incomemonthlytemp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bizFee != null" >
        biz_fee,
      </if>
      <if test="bizIncome != null" >
        biz_income,
      </if>
      <if test="carCarriage != null" >
        car_carriage,
      </if>
      <if test="carriageMoney != null" >
        carriage_money,
      </if>
      <if test="conveyWage != null" >
        convey_wage,
      </if>
      <if test="financeFee != null" >
        finance_fee,
      </if>
      <if test="houseRent != null" >
        house_rent,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="insuranceMoney != null" >
        insurance_money,
      </if>
      <if test="manageFee != null" >
        manage_fee,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="officeFee != null" >
        office_fee,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="payout != null" >
        payout,
      </if>
      <if test="phoneFee != null" >
        phone_fee,
      </if>
      <if test="profit != null" >
        profit,
      </if>
      <if test="unbizIncome != null" >
        unbiz_income,
      </if>
      <if test="wage != null" >
        wage,
      </if>
      <if test="waterElecFee != null" >
        water_elec_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bizFee != null" >
        #{bizFee,jdbcType=DOUBLE},
      </if>
      <if test="bizIncome != null" >
        #{bizIncome,jdbcType=DOUBLE},
      </if>
      <if test="carCarriage != null" >
        #{carCarriage,jdbcType=DOUBLE},
      </if>
      <if test="carriageMoney != null" >
        #{carriageMoney,jdbcType=DOUBLE},
      </if>
      <if test="conveyWage != null" >
        #{conveyWage,jdbcType=DOUBLE},
      </if>
      <if test="financeFee != null" >
        #{financeFee,jdbcType=DOUBLE},
      </if>
      <if test="houseRent != null" >
        #{houseRent,jdbcType=DOUBLE},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DOUBLE},
      </if>
      <if test="insuranceMoney != null" >
        #{insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null" >
        #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="month != null" >
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="officeFee != null" >
        #{officeFee,jdbcType=DOUBLE},
      </if>
      <if test="other != null" >
        #{other,jdbcType=DOUBLE},
      </if>
      <if test="payout != null" >
        #{payout,jdbcType=DOUBLE},
      </if>
      <if test="phoneFee != null" >
        #{phoneFee,jdbcType=DOUBLE},
      </if>
      <if test="profit != null" >
        #{profit,jdbcType=DOUBLE},
      </if>
      <if test="unbizIncome != null" >
        #{unbizIncome,jdbcType=DOUBLE},
      </if>
      <if test="wage != null" >
        #{wage,jdbcType=DOUBLE},
      </if>
      <if test="waterElecFee != null" >
        #{waterElecFee,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.IncomemonthlytempExample" resultType="java.lang.Integer" >
    select count(*) from incomemonthlytemp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update incomemonthlytemp
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bizFee != null" >
        biz_fee = #{record.bizFee,jdbcType=DOUBLE},
      </if>
      <if test="record.bizIncome != null" >
        biz_income = #{record.bizIncome,jdbcType=DOUBLE},
      </if>
      <if test="record.carCarriage != null" >
        car_carriage = #{record.carCarriage,jdbcType=DOUBLE},
      </if>
      <if test="record.carriageMoney != null" >
        carriage_money = #{record.carriageMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.conveyWage != null" >
        convey_wage = #{record.conveyWage,jdbcType=DOUBLE},
      </if>
      <if test="record.financeFee != null" >
        finance_fee = #{record.financeFee,jdbcType=DOUBLE},
      </if>
      <if test="record.houseRent != null" >
        house_rent = #{record.houseRent,jdbcType=DOUBLE},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=DOUBLE},
      </if>
      <if test="record.insuranceMoney != null" >
        insurance_money = #{record.insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.manageFee != null" >
        manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=VARCHAR},
      </if>
      <if test="record.officeFee != null" >
        office_fee = #{record.officeFee,jdbcType=DOUBLE},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=DOUBLE},
      </if>
      <if test="record.payout != null" >
        payout = #{record.payout,jdbcType=DOUBLE},
      </if>
      <if test="record.phoneFee != null" >
        phone_fee = #{record.phoneFee,jdbcType=DOUBLE},
      </if>
      <if test="record.profit != null" >
        profit = #{record.profit,jdbcType=DOUBLE},
      </if>
      <if test="record.unbizIncome != null" >
        unbiz_income = #{record.unbizIncome,jdbcType=DOUBLE},
      </if>
      <if test="record.wage != null" >
        wage = #{record.wage,jdbcType=DOUBLE},
      </if>
      <if test="record.waterElecFee != null" >
        water_elec_fee = #{record.waterElecFee,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update incomemonthlytemp
    set id = #{record.id,jdbcType=INTEGER},
      biz_fee = #{record.bizFee,jdbcType=DOUBLE},
      biz_income = #{record.bizIncome,jdbcType=DOUBLE},
      car_carriage = #{record.carCarriage,jdbcType=DOUBLE},
      carriage_money = #{record.carriageMoney,jdbcType=DOUBLE},
      convey_wage = #{record.conveyWage,jdbcType=DOUBLE},
      finance_fee = #{record.financeFee,jdbcType=DOUBLE},
      house_rent = #{record.houseRent,jdbcType=DOUBLE},
      income = #{record.income,jdbcType=DOUBLE},
      insurance_money = #{record.insuranceMoney,jdbcType=DOUBLE},
      manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      month = #{record.month,jdbcType=VARCHAR},
      office_fee = #{record.officeFee,jdbcType=DOUBLE},
      other = #{record.other,jdbcType=DOUBLE},
      payout = #{record.payout,jdbcType=DOUBLE},
      phone_fee = #{record.phoneFee,jdbcType=DOUBLE},
      profit = #{record.profit,jdbcType=DOUBLE},
      unbiz_income = #{record.unbizIncome,jdbcType=DOUBLE},
      wage = #{record.wage,jdbcType=DOUBLE},
      water_elec_fee = #{record.waterElecFee,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Incomemonthlytemp" >
    update incomemonthlytemp
    <set >
      <if test="bizFee != null" >
        biz_fee = #{bizFee,jdbcType=DOUBLE},
      </if>
      <if test="bizIncome != null" >
        biz_income = #{bizIncome,jdbcType=DOUBLE},
      </if>
      <if test="carCarriage != null" >
        car_carriage = #{carCarriage,jdbcType=DOUBLE},
      </if>
      <if test="carriageMoney != null" >
        carriage_money = #{carriageMoney,jdbcType=DOUBLE},
      </if>
      <if test="conveyWage != null" >
        convey_wage = #{conveyWage,jdbcType=DOUBLE},
      </if>
      <if test="financeFee != null" >
        finance_fee = #{financeFee,jdbcType=DOUBLE},
      </if>
      <if test="houseRent != null" >
        house_rent = #{houseRent,jdbcType=DOUBLE},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DOUBLE},
      </if>
      <if test="insuranceMoney != null" >
        insurance_money = #{insuranceMoney,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null" >
        manage_fee = #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=VARCHAR},
      </if>
      <if test="officeFee != null" >
        office_fee = #{officeFee,jdbcType=DOUBLE},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=DOUBLE},
      </if>
      <if test="payout != null" >
        payout = #{payout,jdbcType=DOUBLE},
      </if>
      <if test="phoneFee != null" >
        phone_fee = #{phoneFee,jdbcType=DOUBLE},
      </if>
      <if test="profit != null" >
        profit = #{profit,jdbcType=DOUBLE},
      </if>
      <if test="unbizIncome != null" >
        unbiz_income = #{unbizIncome,jdbcType=DOUBLE},
      </if>
      <if test="wage != null" >
        wage = #{wage,jdbcType=DOUBLE},
      </if>
      <if test="waterElecFee != null" >
        water_elec_fee = #{waterElecFee,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Incomemonthlytemp" >
    update incomemonthlytemp
    set biz_fee = #{bizFee,jdbcType=DOUBLE},
      biz_income = #{bizIncome,jdbcType=DOUBLE},
      car_carriage = #{carCarriage,jdbcType=DOUBLE},
      carriage_money = #{carriageMoney,jdbcType=DOUBLE},
      convey_wage = #{conveyWage,jdbcType=DOUBLE},
      finance_fee = #{financeFee,jdbcType=DOUBLE},
      house_rent = #{houseRent,jdbcType=DOUBLE},
      income = #{income,jdbcType=DOUBLE},
      insurance_money = #{insuranceMoney,jdbcType=DOUBLE},
      manage_fee = #{manageFee,jdbcType=DOUBLE},
      month = #{month,jdbcType=VARCHAR},
      office_fee = #{officeFee,jdbcType=DOUBLE},
      other = #{other,jdbcType=DOUBLE},
      payout = #{payout,jdbcType=DOUBLE},
      phone_fee = #{phoneFee,jdbcType=DOUBLE},
      profit = #{profit,jdbcType=DOUBLE},
      unbiz_income = #{unbizIncome,jdbcType=DOUBLE},
      wage = #{wage,jdbcType=DOUBLE},
      water_elec_fee = #{waterElecFee,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>