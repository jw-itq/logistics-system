<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.dao.mapper.CargoerrorMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Cargoerror" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer" property="customer" jdbcType="VARCHAR" />
    <result column="goods_bill_code" property="goodsBillCode" jdbcType="VARCHAR" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="goods_revert_bill_code" property="goodsRevertBillCode" jdbcType="VARCHAR" />
    <result column="goods_value" property="goodsValue" jdbcType="DOUBLE" />
    <result column="mistake_type" property="mistakeType" jdbcType="VARCHAR" />
    <result column="piece_amount" property="pieceAmount" jdbcType="INTEGER" />
    <result column="size" property="size" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, customer, goods_bill_code, goods_name, goods_revert_bill_code, goods_value, mistake_type, 
    piece_amount, size
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.CargoerrorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cargoerror
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cargoerror
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cargoerror
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.CargoerrorExample" >
    delete from cargoerror
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Cargoerror" >
    insert into cargoerror (id, customer, goods_bill_code, 
      goods_name, goods_revert_bill_code, goods_value, 
      mistake_type, piece_amount, size
      )
    values (#{id,jdbcType=INTEGER}, #{customer,jdbcType=VARCHAR}, #{goodsBillCode,jdbcType=VARCHAR}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsRevertBillCode,jdbcType=VARCHAR}, #{goodsValue,jdbcType=DOUBLE}, 
      #{mistakeType,jdbcType=VARCHAR}, #{pieceAmount,jdbcType=INTEGER}, #{size,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Cargoerror" >
    insert into cargoerror
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customer != null" >
        customer,
      </if>
      <if test="goodsBillCode != null" >
        goods_bill_code,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="goodsRevertBillCode != null" >
        goods_revert_bill_code,
      </if>
      <if test="goodsValue != null" >
        goods_value,
      </if>
      <if test="mistakeType != null" >
        mistake_type,
      </if>
      <if test="pieceAmount != null" >
        piece_amount,
      </if>
      <if test="size != null" >
        size,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="goodsBillCode != null" >
        #{goodsBillCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsRevertBillCode != null" >
        #{goodsRevertBillCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsValue != null" >
        #{goodsValue,jdbcType=DOUBLE},
      </if>
      <if test="mistakeType != null" >
        #{mistakeType,jdbcType=VARCHAR},
      </if>
      <if test="pieceAmount != null" >
        #{pieceAmount,jdbcType=INTEGER},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.CargoerrorExample" resultType="java.lang.Integer" >
    select count(*) from cargoerror
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cargoerror
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customer != null" >
        customer = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsBillCode != null" >
        goods_bill_code = #{record.goodsBillCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsRevertBillCode != null" >
        goods_revert_bill_code = #{record.goodsRevertBillCode,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsValue != null" >
        goods_value = #{record.goodsValue,jdbcType=DOUBLE},
      </if>
      <if test="record.mistakeType != null" >
        mistake_type = #{record.mistakeType,jdbcType=VARCHAR},
      </if>
      <if test="record.pieceAmount != null" >
        piece_amount = #{record.pieceAmount,jdbcType=INTEGER},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cargoerror
    set id = #{record.id,jdbcType=INTEGER},
      customer = #{record.customer,jdbcType=VARCHAR},
      goods_bill_code = #{record.goodsBillCode,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_revert_bill_code = #{record.goodsRevertBillCode,jdbcType=VARCHAR},
      goods_value = #{record.goodsValue,jdbcType=DOUBLE},
      mistake_type = #{record.mistakeType,jdbcType=VARCHAR},
      piece_amount = #{record.pieceAmount,jdbcType=INTEGER},
      size = #{record.size,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Cargoerror" >
    update cargoerror
    <set >
      <if test="customer != null" >
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="goodsBillCode != null" >
        goods_bill_code = #{goodsBillCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsRevertBillCode != null" >
        goods_revert_bill_code = #{goodsRevertBillCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsValue != null" >
        goods_value = #{goodsValue,jdbcType=DOUBLE},
      </if>
      <if test="mistakeType != null" >
        mistake_type = #{mistakeType,jdbcType=VARCHAR},
      </if>
      <if test="pieceAmount != null" >
        piece_amount = #{pieceAmount,jdbcType=INTEGER},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Cargoerror" >
    update cargoerror
    set customer = #{customer,jdbcType=VARCHAR},
      goods_bill_code = #{goodsBillCode,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_revert_bill_code = #{goodsRevertBillCode,jdbcType=VARCHAR},
      goods_value = #{goodsValue,jdbcType=DOUBLE},
      mistake_type = #{mistakeType,jdbcType=VARCHAR},
      piece_amount = #{pieceAmount,jdbcType=INTEGER},
      size = #{size,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>