<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.dao.mapper.ComplaintinfoMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Complaintinfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="appeal_content" property="appealContent" jdbcType="VARCHAR" />
    <result column="appeal_date" property="appealDate" jdbcType="VARCHAR" />
    <result column="call_back_date" property="callBackDate" jdbcType="VARCHAR" />
    <result column="customer" property="customer" jdbcType="VARCHAR" />
    <result column="deal_date" property="dealDate" jdbcType="VARCHAR" />
    <result column="deal_person" property="dealPerson" jdbcType="VARCHAR" />
    <result column="deal_result" property="dealResult" jdbcType="VARCHAR" />
    <result column="goods_bill_code" property="goodsBillCode" jdbcType="VARCHAR" />
    <result column="if_callback" property="ifCallback" jdbcType="BIT" />
    <result column="if_handle" property="ifHandle" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, appeal_content, appeal_date, call_back_date, customer, deal_date, deal_person, 
    deal_result, goods_bill_code, if_callback, if_handle
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.ComplaintinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complaintinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from complaintinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from complaintinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.ComplaintinfoExample" >
    delete from complaintinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Complaintinfo" >
    insert into complaintinfo (id, appeal_content, appeal_date, 
      call_back_date, customer, deal_date, 
      deal_person, deal_result, goods_bill_code, 
      if_callback, if_handle)
    values (#{id,jdbcType=INTEGER}, #{appealContent,jdbcType=VARCHAR}, #{appealDate,jdbcType=VARCHAR}, 
      #{callBackDate,jdbcType=VARCHAR}, #{customer,jdbcType=VARCHAR}, #{dealDate,jdbcType=VARCHAR}, 
      #{dealPerson,jdbcType=VARCHAR}, #{dealResult,jdbcType=VARCHAR}, #{goodsBillCode,jdbcType=VARCHAR}, 
      #{ifCallback,jdbcType=BIT}, #{ifHandle,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Complaintinfo" >
    insert into complaintinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appealContent != null" >
        appeal_content,
      </if>
      <if test="appealDate != null" >
        appeal_date,
      </if>
      <if test="callBackDate != null" >
        call_back_date,
      </if>
      <if test="customer != null" >
        customer,
      </if>
      <if test="dealDate != null" >
        deal_date,
      </if>
      <if test="dealPerson != null" >
        deal_person,
      </if>
      <if test="dealResult != null" >
        deal_result,
      </if>
      <if test="goodsBillCode != null" >
        goods_bill_code,
      </if>
      <if test="ifCallback != null" >
        if_callback,
      </if>
      <if test="ifHandle != null" >
        if_handle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appealContent != null" >
        #{appealContent,jdbcType=VARCHAR},
      </if>
      <if test="appealDate != null" >
        #{appealDate,jdbcType=VARCHAR},
      </if>
      <if test="callBackDate != null" >
        #{callBackDate,jdbcType=VARCHAR},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="dealDate != null" >
        #{dealDate,jdbcType=VARCHAR},
      </if>
      <if test="dealPerson != null" >
        #{dealPerson,jdbcType=VARCHAR},
      </if>
      <if test="dealResult != null" >
        #{dealResult,jdbcType=VARCHAR},
      </if>
      <if test="goodsBillCode != null" >
        #{goodsBillCode,jdbcType=VARCHAR},
      </if>
      <if test="ifCallback != null" >
        #{ifCallback,jdbcType=BIT},
      </if>
      <if test="ifHandle != null" >
        #{ifHandle,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.ComplaintinfoExample" resultType="java.lang.Integer" >
    select count(*) from complaintinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update complaintinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.appealContent != null" >
        appeal_content = #{record.appealContent,jdbcType=VARCHAR},
      </if>
      <if test="record.appealDate != null" >
        appeal_date = #{record.appealDate,jdbcType=VARCHAR},
      </if>
      <if test="record.callBackDate != null" >
        call_back_date = #{record.callBackDate,jdbcType=VARCHAR},
      </if>
      <if test="record.customer != null" >
        customer = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.dealDate != null" >
        deal_date = #{record.dealDate,jdbcType=VARCHAR},
      </if>
      <if test="record.dealPerson != null" >
        deal_person = #{record.dealPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.dealResult != null" >
        deal_result = #{record.dealResult,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsBillCode != null" >
        goods_bill_code = #{record.goodsBillCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ifCallback != null" >
        if_callback = #{record.ifCallback,jdbcType=BIT},
      </if>
      <if test="record.ifHandle != null" >
        if_handle = #{record.ifHandle,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update complaintinfo
    set id = #{record.id,jdbcType=INTEGER},
      appeal_content = #{record.appealContent,jdbcType=VARCHAR},
      appeal_date = #{record.appealDate,jdbcType=VARCHAR},
      call_back_date = #{record.callBackDate,jdbcType=VARCHAR},
      customer = #{record.customer,jdbcType=VARCHAR},
      deal_date = #{record.dealDate,jdbcType=VARCHAR},
      deal_person = #{record.dealPerson,jdbcType=VARCHAR},
      deal_result = #{record.dealResult,jdbcType=VARCHAR},
      goods_bill_code = #{record.goodsBillCode,jdbcType=VARCHAR},
      if_callback = #{record.ifCallback,jdbcType=BIT},
      if_handle = #{record.ifHandle,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Complaintinfo" >
    update complaintinfo
    <set >
      <if test="appealContent != null" >
        appeal_content = #{appealContent,jdbcType=VARCHAR},
      </if>
      <if test="appealDate != null" >
        appeal_date = #{appealDate,jdbcType=VARCHAR},
      </if>
      <if test="callBackDate != null" >
        call_back_date = #{callBackDate,jdbcType=VARCHAR},
      </if>
      <if test="customer != null" >
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="dealDate != null" >
        deal_date = #{dealDate,jdbcType=VARCHAR},
      </if>
      <if test="dealPerson != null" >
        deal_person = #{dealPerson,jdbcType=VARCHAR},
      </if>
      <if test="dealResult != null" >
        deal_result = #{dealResult,jdbcType=VARCHAR},
      </if>
      <if test="goodsBillCode != null" >
        goods_bill_code = #{goodsBillCode,jdbcType=VARCHAR},
      </if>
      <if test="ifCallback != null" >
        if_callback = #{ifCallback,jdbcType=BIT},
      </if>
      <if test="ifHandle != null" >
        if_handle = #{ifHandle,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Complaintinfo" >
    update complaintinfo
    set appeal_content = #{appealContent,jdbcType=VARCHAR},
      appeal_date = #{appealDate,jdbcType=VARCHAR},
      call_back_date = #{callBackDate,jdbcType=VARCHAR},
      customer = #{customer,jdbcType=VARCHAR},
      deal_date = #{dealDate,jdbcType=VARCHAR},
      deal_person = #{dealPerson,jdbcType=VARCHAR},
      deal_result = #{dealResult,jdbcType=VARCHAR},
      goods_bill_code = #{goodsBillCode,jdbcType=VARCHAR},
      if_callback = #{ifCallback,jdbcType=BIT},
      if_handle = #{ifHandle,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>